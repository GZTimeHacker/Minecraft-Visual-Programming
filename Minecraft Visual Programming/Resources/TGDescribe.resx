<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="bred_animals" xml:space="preserve">
    <value>繁殖两个动物</value>
  </data>
  <data name="brewed_potion" xml:space="preserve">
    <value>拿出一瓶酿造好的药水</value>
  </data>
  <data name="changed_dimension" xml:space="preserve">
    <value>在两个维度间旅行</value>
  </data>
  <data name="construct_beacon" xml:space="preserve">
    <value>更改信标结构</value>
  </data>
  <data name="consume_item" xml:space="preserve">
    <value>玩家损耗了物品</value>
  </data>
  <data name="cured_zombie_villager" xml:space="preserve">
    <value>玩家治愈了僵尸村民</value>
  </data>
  <data name="effects_changed" xml:space="preserve">
    <value>玩家获得/消除状态效果</value>
  </data>
  <data name="enchanted_item" xml:space="preserve">
    <value>玩家通过附魔台附魔物品</value>
  </data>
  <data name="enter_block" xml:space="preserve">
    <value>玩家进入方块</value>
  </data>
  <data name="entity_hurt_player" xml:space="preserve">
    <value>实体伤害玩家</value>
  </data>
  <data name="entity_killed_player" xml:space="preserve">
    <value>实体杀死玩家</value>
  </data>
  <data name="impossible" xml:space="preserve">
    <value>不可能，通过命令触发</value>
  </data>
  <data name="inventory_changed" xml:space="preserve">
    <value>玩家物品栏变化</value>
  </data>
  <data name="item_durability_changed" xml:space="preserve">
    <value>物品栏中任何物品以任何形式损害</value>
  </data>
  <data name="levitation" xml:space="preserve">
    <value>玩家获得漂浮状态效果</value>
  </data>
  <data name="location" xml:space="preserve">
    <value>每个游戏刻（每秒20次）检查玩家的位置</value>
  </data>
  <data name="nether_travel" xml:space="preserve">
    <value>玩家进入下界，然后返回主世界</value>
  </data>
  <data name="placed_block" xml:space="preserve">
    <value>玩家放置方块</value>
  </data>
  <data name="player_hurt_entity" xml:space="preserve">
    <value>玩家伤害实体（包括自己）</value>
  </data>
  <data name="player_killed_entity" xml:space="preserve">
    <value>玩家杀死实体</value>
  </data>
  <data name="recipe_unlocked" xml:space="preserve">
    <value>玩家解锁配方</value>
  </data>
  <data name="slept_in_bed" xml:space="preserve">
    <value>玩家上床睡觉</value>
  </data>
  <data name="summoned_entity" xml:space="preserve">
    <value>玩家召唤了实体</value>
  </data>
  <data name="tame_animal" xml:space="preserve">
    <value>玩家驯服动物</value>
  </data>
  <data name="tick" xml:space="preserve">
    <value>每个游戏刻触发（每秒20次）</value>
  </data>
  <data name="used_ender_eye" xml:space="preserve">
    <value>玩家使用末影之眼（在有要塞生成的世界）</value>
  </data>
  <data name="used_totem" xml:space="preserve">
    <value>玩家使用图腾</value>
  </data>
  <data name="villager_trade" xml:space="preserve">
    <value>玩家与村民交易</value>
  </data>
</root>